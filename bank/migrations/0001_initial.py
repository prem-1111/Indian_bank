# Generated by Django 2.2.4 on 2019-08-01 18:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BankBranches',
            fields=[
                ('ifsc', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('branch', models.CharField(max_length=74)),
                ('address', models.CharField(max_length=195)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=26)),
                ('bank_name', models.CharField(max_length=49)),
            ],
            options={
                'db_table': 'bank_branches',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Banks',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=49)),
            ],
            options={
                'db_table': 'banks',
            },
        ),
        migrations.CreateModel(
            name='Branches',
            fields=[
                ('ifsc', models.CharField(max_length=11, primary_key=True, serialize=False)),
                ('branch', models.CharField(max_length=74)),
                ('address', models.CharField(max_length=195)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=26)),
                ('bank_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bank.Banks')),
            ],
            options={
                'db_table': 'branches',
            },
        ),
      
      migrations.RunSQL(
    """
    DROP VIEW IF EXISTS bank_branches;
    CREATE OR REPLACE VIEW bank_branches AS
    SELECT branches.ifsc,
    branches.bank_id_id,
    branches.branch,
    branches.address,
    branches.city,
    branches.district,
    branches.state,

    banks.name AS bank_name
   FROM (branches

     JOIN banks ON ((branches.bank_id_id = banks.id)));
    """
),

    ]
